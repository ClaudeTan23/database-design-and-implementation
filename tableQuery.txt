CREATE TABLE User (
    userID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(100) NOT NULL,
    firstName VARCHAR(100) NOT NULL,
    lastName VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    address VARCHAR(150) NOT NULL,
    contactInfo VARCHAR(100) NOT NULL,
    userType INT NOT NULL,
    FOREIGN KEY (userType) REFERENCES userType(userTypeID)
);



CREATE TABLE userType (
    userTypeID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    userType VARCHAR(50) NOT NULL
);



CREATE TABLE freelancerProfile (
    freelancerID INT NOT NULL PRIMARY KEY,
    userID INT,
    skills VARCHAR(150) NOT NULL DEFAULT '-',
    expertise VARCHAR(150) NOT NULL DEFAULT '-',
    portfolio TEXT NOT NULL DEFAULT '-',
    hourlyRate DECIMAL(10, 2) NOT NULL DEFAULT 0,
    availability BOOLEAN NOT NULL DEFAULT FALSE,
    FOREIGN KEY (userID) REFERENCES user(userID)
);


CREATE TABLE clientProfile (
    clientID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    userID INT,
    companyName varchar(100) NOT NULL DEFAULT '-',
    companyInfo TEXT NOT NULL DEFAULT '-',
    ProjectRequirements TEXT NOT NULL DEFAULT '-',
    FOREIGN KEY (userID) REFERENCES user(userID)
);



CREATE TABLE project (
    projectID INT PRIMARY KEY AUTO_INCREMENT NOT NULL ,
    clientID INT,
    projectDetails TEXT NOT NULL,
    requirements TEXT NOT NULL,
    budget DECIMAL(15, 2) NOT NULL,
    status VARCHAR(20) NOT NULL,
    FOREIGN KEY (clientID) REFERENCES clientprofile(clientID)
);

CREATE TABLE message (
    messageID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    senderID INT,
    recipientID INT,
    messageContent TEXT NOT NULL,
    timestamp TIMESTAMP NOT NULL,
    readStatus BOOLEAN NOT NULL DEFAULT FALSE,
    FOREIGN KEY (senderID) REFERENCES user(userID),
    FOREIGN KEY (recipientID) REFERENCES user(userID)
);

CREATE TABLE notification (
    notificationID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    userID INT NOT NULL,
    notificationContent TEXT NOT NULL,
    timestamp TIMESTAMP NOT NULL,
    FOREIGN KEY (userID) REFERENCES user(userID)
);


CREATE TABLE freelancerRating (
    freelancerRatingID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    freelancerID INT NOT NULL,
    feedbackUserId INT NOT NULL,
    ratings DECIMAL(3, 2) NOT NULL,
    feedback TEXT,
    FOREIGN KEY (freelancerID) REFERENCES user(userID),
    FOREIGN KEY (feedbackUserId) REFERENCES user(userID)
)

CREATE TABLE milestones (
    milestoneID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    projectID INT NOT NULL,
    description TEXT NOT NULL,
    dueDate DATE,
    status VARCHAR(50) NOT NULL,
    FOREIGN KEY (projectID) REFERENCES project(projectID)
);

CREATE TABLE payments (
    paymentID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    projectID INT NOT NULL,
    amount DECIMAL(10, 2) NOT NULL,
    status VARCHAR(50) NOT NULL,
    FOREIGN KEY (projectID) REFERENCES project(projectID)
);


CREATE TABLE projectFeedback (
    projectFeedbackID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    projectID INT NOT NULL,
    userID INT NOT NULL,
    ratings DECIMAL(3, 2) NOT NULL,
    feedbackContent TEXT,
    FOREIGN KEY (projectID) REFERENCES project(projectID),
    FOREIGN KEY (userID) REFERENCES user(userID)
);

CREATE TABLE projectAssignment (
    assignmentID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    freelancerID INT NOT NULL,
    projectID INT NOT NULL,
    status VARCHAR(50) NOT NULL,
    FOREIGN KEY (freelancerID) REFERENCES freelancerprofile(freelancerID),
    FOREIGN KEY (projectID) REFERENCES project(projectID)
);